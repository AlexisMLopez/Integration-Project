<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>course.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Course::{ctor}</FUNCTION>
    <DECORATED>??0Course@@QAE@XZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>course.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Course::PrintAssignments</FUNCTION>
    <DECORATED>?PrintAssignments@Course@@QAEXXZ</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>course.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Course::PrintAssignments</FUNCTION>
    <DECORATED>?PrintAssignments@Course@@QAEXXZ</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>professor.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26436</DEFECTCODE>
    <DESCRIPTION>The type 'class Professor' with a virtual function needs either public virtual or protected non-virtual destructor (c.35).</DESCRIPTION>
    <FUNCTION>Professor::UserType</FUNCTION>
    <DECORATED>?UserType@Professor@@UAEXXZ</DECORATED>
    <FUNCLINE>44</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>professor.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Professor::SetGrades</FUNCTION>
    <DECORATED>?SetGrades@Professor@@SAXAAVStudent@@@Z</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>student.h</FILENAME>
      <LINE>27</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'allocator&lt;double&gt; &gt;()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>Student::{ctor}</FUNCTION>
    <DECORATED>??0Student@@QAE@XZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>student.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26436</DEFECTCODE>
    <DESCRIPTION>The type 'class Student' with a virtual function needs either public virtual or protected non-virtual destructor (c.35).</DESCRIPTION>
    <FUNCTION>Student::UserType</FUNCTION>
    <DECORATED>?UserType@Student@@UAEXXZ</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>user.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'operator=()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>User::{ctor}</FUNCTION>
    <DECORATED>??0User@@QAE@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>user.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'operator=()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>User::{ctor}</FUNCTION>
    <DECORATED>??0User@@QAE@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>user.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26436</DEFECTCODE>
    <DESCRIPTION>The type 'class User' with a virtual function needs either public virtual or protected non-virtual destructor (c.35).</DESCRIPTION>
    <FUNCTION>User::UserType</FUNCTION>
    <DECORATED>?UserType@User@@UAEXXZ</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\alexi\source\repos\Integration-Project\</FILEPATH>
      <FILENAME>user.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'User::UserType' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>User::UserType</FUNCTION>
    <DECORATED>?UserType@User@@UAEXXZ</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>