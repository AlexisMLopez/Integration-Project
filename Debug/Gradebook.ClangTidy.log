C:\Users\alexi\source\repos\Integration-Project\course.cpp:38:2: warning: use range-based for loop instead [modernize-loop-convert]
        for (int i = 0; i < 4; i++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~
            (const auto & assignment : assignments)
C:\Users\alexi\source\repos\Integration-Project\course.cpp:39:23: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
                std::cout << "[" << assignments[i] << "]" << " ";
                                    ^
C:\Users\alexi\source\repos\Integration-Project\main.cpp:20:6: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
auto main()->int
     ^
C:\Users\alexi\source\repos\Integration-Project\main.cpp:45:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
                                professor.EnterStudentName(student);
                                ^~~~~~~~~~
                                Professor::
Suppressed 120527 warnings (120527 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
C:\Users\alexi\source\repos\Integration-Project\main.cpp:46:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
                                professor.SetGrades(student);                                                   
                                ^~~~~~~~~~
                                Professor::
C:\Users\alexi\source\repos\Integration-Project\main.cpp:50:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
                                professor.ViewGrades(student);
                                ^~~~~~~~~~
                                Professor::
C:\Users\alexi\source\repos\Integration-Project\main.cpp:62:27: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
                        else if (user_input == 5) {
                                               ^
C:\Users\alexi\source\repos\Integration-Project\professor.cpp:15:34: warning: initializer for base class 'User' is redundant [readability-redundant-member-init]
Professor::Professor()noexcept : User()                                                             
                                 ^~~~~~~~
C:\Users\alexi\source\repos\Integration-Project\professor.cpp:60:2: warning: use range-based for loop instead [modernize-loop-convert]
        for (int i = 0; i < student.student_grades.size(); i++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (double student_grade : student.student_grades)
C:\Users\alexi\source\repos\Integration-Project\professor.cpp:94:17: warning: method 'CalculateFinalGrade' can be made const [readability-make-member-function-const]
void Professor::CalculateFinalGrade(Student& student) {
                ^
                                                      const
C:\Users\alexi\source\repos\Integration-Project\student.cpp:31:2: warning: use range-based for loop instead [modernize-loop-convert]
        for (int i = 0; i < student_grades.size(); i++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (double student_grade : student_grades)
C:\Users\alexi\source\repos\Integration-Project\user.cpp:16:7: warning: an exception may be thrown in function 'User' which should not throw exceptions [bugprone-exception-escape]
User::User()noexcept
      ^
